# Codetech-task-1
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather App</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: url('weather app img.avif') no-repeat center center/cover;
            margin: 0;
            padding: 0;
        }
        header {
            background-color: #4c99af;
            color: white;
            padding: 10px;
            text-align: center;
        }
        .container {
            margin: 20px auto;
            padding: 20px;
            max-width: 600px;
            background-color: white;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border-radius: 5px;
        }
        .loading {
            text-align: center;
            color: #555;
        }
        .data {
            margin-top: 20px;
        }
        .data h2 {
            margin: 0;
            color: #333;
        }
        .data p {
            margin: 5px 0;
        }
    </style>
</head>
<body>
    <header>
        <h1>Weather App Information</h1>
    </header>
    <div class="container">
        <div id="app">
            <div class="loading" id="loading">Fetching weather data...</div>
            <div class="data" id="data" style="display: none;"></div>
        </div>
    </div>

    <script>
        // Step 1: Select the elements for displaying data
        const loading = document.getElementById('loading');
        const data = document.getElementById('data');

        // Step 2: Set API variables
        const apiKey = '791e7deb691e3f9725d6b801a3c5f1a0'; // Replace with your OpenWeather API key
        const city = 'Hyderabad'; // Default city
        const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;

        // Step 3: Fetch data from OpenWeather API
        async function getWeather() {
            try {
                const response = await fetch(apiUrl);

                // Step 4: Handle response
                if (!response.ok) {
                    throw new Error('Could not fetch weather data');
                }

                const weatherData = await response.json();
                displayWeather(weatherData);
            } catch (error) {
                loading.textContent = error.message;
            }
        }

        // Step 5: Display weather data on the page
        function displayWeather(weatherData) {
            loading.style.display = 'none'; // Hide loading message
            data.style.display = 'block'; // Show data container

            // Add weather information to the page
            data.innerHTML = `
                <h2>Weather in ${weatherData.name}</h2>
                <p>Temperature: ${weatherData.main.temp}Â°C</p>
                <p>Description: ${weatherData.weather[0].description}</p>
                <p>Humidity: ${weatherData.main.humidity}%</p>
                <p>Wind Speed: ${weatherData.wind.speed} m/s</p>
            `;
        }

        // Step 6: Call the function when the page loads
        getWeather();
    </script>
</body>
</html>
